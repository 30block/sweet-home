name: Deploy 
on:
  push:
    branches:
      - master 

jobs:
  versionist:
    name: Run versionist
    if: "!contains(github.event.head_commit.author.name, 'versionist')"   # Ignore push events made by the service account
    runs-on: ubuntu-latest
    outputs:                                              # (optional) Only if you want to use them in next jobs
      version: ${{ steps.versionist.outputs.version }}    # version: project's version after running versionist
      updated: ${{ steps.versionist.outputs.updated }}    # updated: true if the version has been updated
    steps: 
    - name: Checkout project
      uses: actions/checkout@v2
      with:
        fetch-depth: 0                                    # We need all commits and tags
        persist-credentials: false                        # Next step needs to use service account's token
    - name: Run versionist
      id: versionist                                      # (optional) Only needed if using outputs
      uses: tmigone/versionist@master
      with:
        # Provide your versionist service account details
        github_email: 'flalanne+versionist@gmail.com'
        github_username: 'versiointi'
        github_token: ${{ secrets.GH_VERSIONIST_TOKEN }}

  docker:
    name: Build image and publish to DockerHub
    needs: versionist
    if: needs.versionist.outputs.updated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}
          VERSION=${{ needs.versionist.outputs.version }}
          SHORTREF=${GITHUB_SHA::8}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF},${DOCKER_IMAGE}:latest"

          # Set output parameters.
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          build-args: VERSION=${{ steps.prep.outputs.version }}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}



  # You can now use any other action to package and distribute your new release (NPM, docker, etc)
  # If you set up the outputs you can use them here
  output:
    name: A job to echo versionist's outputs
    needs: versionist
    if: needs.versionist.outputs.updated == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Echo version number
      run: echo "Version is ${{ needs.versionist.outputs.version }}"
    - name: Echo updated
      run: echo "Updated is ${{ needs.versionist.outputs.updated }}"
